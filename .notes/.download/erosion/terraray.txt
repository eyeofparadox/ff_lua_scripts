Transcript 

Search in video

Introduction hi again lately i've been working on giving the world generation an overhaul especially the erosion algorithm the new algorithm gives interesting river formations where the values gets larger the further towards the coast i get at a coast primitive deltas can form and in regions of high uplift mountains form overall

Old/new comparison it's more varied than the old model the previous implementation gave very fractal and homogeneous patterns river valleys were of more or less the same width despite the water flow and the landscape lacked the position areas like the deltas which i've got in the newer version in this video i'll mention some

Video layout different approaches to simulating aeration by water i'll describe my new model in some detail show some examples of generated worlds and lastly highlight what can be improved there are many factors which shape the landscape of continents but a tumor is powerful are tectonic activity and duration by water tectonic activity

Real world features creates the overall shape of the continents and works on a very high scale if you look at a map of the entire world what you see is the effect of tectonics aeration by water affects the landscape strongly but on a smaller scale to best see the effects one has to so many on this scale most features are the effect of erosional and depositional processes involving water as of yet i've not implemented a proper tectonic simulation but i've looked much more into erosion by water to simulate the effect of

Scientific papers on hydraulic erosion running water on a topology map there are many approaches but to simplify they can be divided into three categories the three categories being to simulate one waters particles two water as fields and three water flow as directed graph networks the erosion model which i previously

Previous model used was based on the directed graph tree approach advantages of that model is that you tend to get steady states where the aeration matches the uplift from a mathematical standpoint steady states are nice some drawbacks are that it's not very parallelizable thusly it's hard to run on the gpu so it's rather slow to be more specific the algorithm is parallelizable as long as there are no holes in the topology the particle approach can be highly parallelizable but the effects you get from that model is not well suited for relation on global scale it's more suited for small scale topologies like a valley or a mountainside not for continents the last approach is to simulate water as a field disapproach can be easily implemented on the gpu thusly speed is a non-issue drawbacks of this approach is that you need a pretty high resolution to get interesting features also if you have too much water features tend to get blurred out and you lose detail

New model now let's talk about my implementation the new model runs entirely on the gpu so it's fast and it combines two of the approaches above i simulate water as a field to get the overall iteration in the precision patterns but i also do some stuff which is similar to the directed graphtree approach which gives me more fine details in my model you can visualize a graft reapproach as a fine needle making precise changes and the water field approach as a broad brush making large changes i combined the two approaches since the graph 3 approach can't deal with holes and lakes very well the combined effect is satisfying at least for now i'll now briefly go over the water field implementation

Water field implementation which might be the most interesting part before doing so i'll just say that i've assumed that the time step in the simulation is one just to make the equations a bit clearer each tile consists of four entities bedrock sediment suspended sediment and water each iteration water is added through precipitation water is then moved to adjacent tiles we consider a triangle i it is surrounded by triangles j k and l we define a flow variable f f i j represents the flow from triangle i to triangle j we can calculate the flow in the next iteration by adding a term to the flow of the current iteration term contains a parameter kf which is a flow speed and delta h which is the difference in total elevation between tile i and j we use a max function to not allow negative flows we do the same for each direction and now need to scale the flow values if scaling is not done more water can flow out from a tile than that is water in the tile after scaling is performed and flow has been calculated for each tile we can update the water values we do this by simply adding the incoming flow and removing the outgoing flow at this stage we calculate a water speed q in this case i've chosen to define water speed as the average between incoming and outgoing water we also need a slope s which we calculate using the maximum of the height differences with the water speed and slope we can now define a carrier capacity carry capacity in this case is defined as the amount of sediment which can be suspended in water typically the stream power equation is used for this purpose the stream power p is a function of water flow q and slope s m and n are numerical parameters i was using m to be 0.5 and n to be one with the inclusion of an additional scale parameter kc the equation for carry capacity becomes this the larger the kc parameter the more sediment can be carried by water which in a sense increases erosion we now come to the stage where we can do the actual erasion consider these three entities the arrows here indicate different processes which may occur erosion transforms bedrock into suspended sediment deposition turns suspended sediment into normal sediment and dissolution turns sediment into suspended sediment to decide which of these processes to apply we compare the amount of suspended sediment to the carry capacity if the amount of suspended sediment is larger than the carry capacity we deposit some sediment if on the other hand the amount of suspended sediment is lower than the carrying capacity would dissolve and possibly erode erosion is done only when there isn't enough sediment to saturate the water areas of high slope and high water speed will erode the land whilst areas close to the ocean where slopes are typically low tend to be dominated by deposition after the erosion deposition event suspended sediment is moved in a similar way to how water is moved lastly i destroy underwater which reaches the ocean level the reason for doing this is that i want a constant ocean though if you skip the ocean destruction step any water flowing into the ocean will raise the ocean elevation which might be interesting in another scenario if one were to allow dynamic ocean levels evaporation should be included now that

Model showcase the main features of the model has been explained let's look at some results the initial noise of the world makes the water form into large pools these pools slowly fills up and spills over as they spill over the flood water erodes the wall of the pools emptying them even further as the water flows towards the ocean it carries sediment with it which is deposited at the shore creating new landmass mountains on high land can also be seen being formed due to economic uplift one feature which i'm very satisfied with is that river valleys tend to get wider the closer to the ocean they get they start one pixel wide up in the mountains and in other places of origin and gradually grow wider it can also be seen that deltas are formed with some rivers into the oceans due to the low resolution the deltas don't look that impressive but the overall shape is there we can compare some real world deltas on the

Real world deltas right and some deltas in my program on the left some real world deltas would be denial training into the mediterranean sea the mississippi draining into the mexican gulf and the amazon draining into the atlantic from a gameplay perspective these would be highly fertile lands where early civilizations would likely form settlements in my opinion at least this new model gives much more varied and interesting maps one

Future improvements large negative of the model though is the tectonic uplift at the moment i just use some pearly noise to create an uplift map this isn't very realistic in the real world fault lines seldom form in the middle of continents like this so the tectonic simulation is definitely something which can be improved another thing i need to work on is the distribution of sediment if we look at a sediment map here it can be seen that most sediment is located on the shore in real life sediment is distributed much more widely over the continents it is possible that one could implement an additional weathering simulation to add sediment more widely the vegetation simulation could also generate sediment as the roots of plants can reach into cracks of rocks and eventually make them crumble forming sediment another thing to look into is to increase the resolution of the world to enable more interesting river formations which can't be seen at a current resolution in the next devlog it's possible that i'll try to implement one of the improvements mentioned it's also possible that i might start adding some basic gameplay mechanics since summer the work isn't going very fast so the next video will be sometime in august with this i'd like to end this devlog as always the project can be found on itch.io with a free copy of the game at its current stage can be downloaded thanks for watching

